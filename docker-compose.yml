
version: '3.5'

services:

  db_postgresql:
    image: postgres:15.2-alpine
    restart: always
    container_name: pet_postgres
    ports:
      - "54321:5432"
    env_file:
      - .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    networks:
      - django

  django_petproject:
    env_file:
      - .env
    depends_on:
      - db_postgresql
    build:
      context: .
      dockerfile: Dockerfile
    container_name: petproject
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - .:/usr/src/django-docker
    networks:
      - django

  rabbitmq:
    image: rabbitmq:3.9.29-management-alpine
    container_name: pet_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq/mnesia
    env_file:
      - .env
    networks:
      - django

  celery_worker:
    env_file:
      - .env
    depends_on:
      - db_postgresql
      - rabbitmq
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A pet_project.pet_celery worker -l info
    container_name: pet_celery_worker
    restart: always
    volumes:
      - .:/usr/src/django-docker
    networks:
      - django

  celery_flower:
    image: mher/flower
    container_name: pet_celery_flower
    env_file:
      - .env
    ports:
      - "5555:5555"
    restart: always
    networks:
      - django
networks:
  django:
    driver: bridge
    name: django
